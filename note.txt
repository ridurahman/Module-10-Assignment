Description of the folder structure: 

Top-Level Folders:
public : Static files such as images can be served from this folder. These static files can be accessed by the base URL (/).
src: This directory is used to organize codes such as application code and project configuration code. We can write components inside this directory and use the components in the app directory.
app: Inside this directory, the App Router works; folders define routes and inside folders, files named ‘page’ create UI views.

Top-level Files:
.gitignore: Which files will be ignored while uploading the project on github is written inside this file.
README.md: This file will be displayed when the project will be on github.
jsconfig.json: This is the configuration file for JavaScript
next.config.js: This is the configuration file for Next.js. We can set our application’s basePath, work with environment variables, custom header etc.
package.json: This file holds project dependencies and scripts for running in the development environment, build, start etc.
package-lock.json: This file is automatically generated when npm modifies node modules or package.json file.
postcss.config.js: This is configuration file for Tailwind CSS
tailwind.config.js: This is also configuration file for Tailwind CSS

Inside app Directory:
globals.css: Styles for the entire project are written inside this file. As we selected tailwind css during creating our project, attributes of tailwind are also auto configured here.
layout.js: Works as the main or starting file of the project. Inside this file there is a ‘RootLayout’ function which has a ‘children’ parameter that takes place inside the ‘body’ tag. 
page.js: Works as home page or root directory.

